* Version Information
** GetVersion
   returns the version of the JNIEnv interface.
* Class and Interface Operations
** DefineClass
   defines a class or interface type from a native byte array
   representing the raw class file data.
** FindClass
   returns a reference to a class or interface type of a given name.
** GetSuperclass
   returns the superclass of a given class or interface.
** IsAssignableFrom
   checks if an instance of one class or interface can be assigned to
   an instance of another class or interface, and is useful for
   runtime type checking.
* Exceptions
** Throw and ThrowNew
   raise an exception in the current thread.
** ExceptionOccurred and ExceptionCheck
   check for pending exceptions in the current thread. ExceptionCheck
   is new in Java 2 SDK release 1.2.
** ExceptionDescribe
   prints a diagnostic message about the pending exception.
** ExceptionClear
   clears the pending exception.
** FatalError
   prints a message and terminates the current virtual machine
   instance.
* Global and Local References
** NewGlobalRef
   creates a global reference
** DeleteGlobalRef
   deletes one.
** NewWeakGlobalRef and DeleteWeak-Global-Ref
   manage weak global references. Both are new in Java 2 SDK release
   1.2.
** DeleteLocalRef
   reclaims the virtual machine resource needed for a local reference.
** NewLocalRef
   is new in Java 2 SDK release 1.2.
** EnsureLocalCapacity
   reserves space in the current thread for a fixed number of local
   references to be created. EnsureLocalCapacity is new in Java 2 SDK
   release 1.2.
** PushLocalFrame and PopLocalFrame
   create a nested scope for local references. Both functions are new
   in Java 2 SDK release 1.2.
* Object Operations
** AllocObject
   allocates an uninitialized object.
** NewObject
   allocates an object and runs one of its constructors.
** GetObjectClass
   returns the class of a given instance.
** IsInstanceOf
   checks if a given object is an instance of a given class or
   interface.
** IsSameObject
   checks if two references refer to the same object.
* Instance Field Access
** GetFieldID
   performs a symbolic lookup on a given class and returns the field
   ID of a named instance field.
** Functions of the Get<Type>Field and Set<Type>Field families access instance fields.
* Static Field Access
** GetStaticFieldID
   performs a symbolic lookup on a given class or interface and
   returns the field ID of a named static field.
** Functions of the GetStatic<Type>Field and SetStatic<Type>Field families
   access static fields.
* Instance Method Calls
** GetMethodID
   performs a symbolic lookup on a given class or interface and
   returns the method ID of an instance method or a constructor.
** Functions of the Call<Type>Method family
   invoke instance methods.
** Functions of the CallNonvirtual<Type>Method family
   invoke either instance methods of a superclass or constructors.
* Static Method Calls
** GetStaticMethodID
   performs a symbolic lookup on a given class and returns the method
   ID of a static method.
** Functions of the CallStatic<Type>Method family
   invoke static methods.
* String Operations
** NewString
   creates a java.lang.String object representing a native Unicode
   string.
** NewStringUTF
   creates a java.lang.String object representing a native UTF-8
   string.
** GetStringLength
   returns the number of Unicode characters in a string represented by
   a java.lang.String object.
** GetStringLengthUTF
   returns the number of UTF-8 bytes needed to encode all characters
   in a string represented by a given java.lang.String object.
** GetStringChars and ReleaseStringChars
   access the content of a java.lang.String object as a pointer to a
   Unicode string.
** GetStringUTFChars and ReleaseStringUTFChars
   access the content of a java.lang.String objectas a pointer to a
   UTF-8 string.
** GetStringCritical and ReleaseStringCritical
   access the content of a java.lang.String object with minimum
   overhead. Both functions are new in Java 2 SDK release 1.2.
** GetStringRegion and GetStringUTFRegion
   copy the contents of a java.lang.String object into a native
   buffer. Both functions are new in Java 2 SDK release 1.2.
* Array Operations
** GetArrayLength
   returns the number of elements in an array.
** NewObjectArray
   creates an array of objects, whereas functions of the
   New<Type>Array family create arrays of primitive types.
** GetObjectArrayElement and SetObjectArrayElement
   allow native code to access arrays of reference types.
** Functions of the Get<Type>ArrayElements and Release<Type>Array-Elements families
   access all the elements in arrays of primitive types.
** Functions of the Get<Type>ArrayRegion and Set<Type>ArrayRegion families
   copy multiple elements in or out of arrays of primitive types.
** GetPrimitiveArrayCritical and ReleasePrimitiveArrayCritical
   access elements in an array of primitive types with minimum
   overhead. Both functions are new in Java 2 SDK release 1.2.
* Native Method Registration
** RegisterNatives and UnregisterNatives
   allow native code to eagerly link and unlink native methods.
* Monitor Operations
** MonitorEnter and MonitorExit
   synchronize on the monitor associated with objects.
* JavaVM Interface
** GetJavaVM
   returns the JavaVM interface pointer for the current virtual
   machine instance.
* Reflection Support
** FromReflectedField
   converts instances of java.lang.reflect.Field in the Java Core
   Reflection API into field IDs. FromReflectedField is new in Java 2
   SDK release 1.2.
** FromReflectedMethod
   converts instances of java.lang.reflect.Method or instances of
   java.lang.reflect.Constructor into method IDs. From-ReflectedMethod
   is new in Java 2 SDK release 1.2.
** ToReflectedField and ToReflectedMethod
   carry out the conversions in the opposite direction. Both functions
   are new in Java 2 SDK release 1.2.
