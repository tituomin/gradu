* <2016-03-26 Sat 21:28> huomattu, että weakglobalref j>j aiheuttaa gc:n
  tsekkaa, mistä johtuu -- satunnainen virhe - meneekö shufflella pois/johtuuko edellisestä ajosta?
  katso myös logit

* <2016-03-26 Sat 18:34> figuring out results [0/2]
  do j > j basic benchmarks really have side effects?
  profile only gives jit code cache ... (or does it)
  5edf0f00-8836-4937-a066-7b4b6479acb2 page 43
  gives typical int value 11783292 ns = 1.1e7

  -- but j > j overhead is NEGATIVE ?
  -- 12245916 is the zero value
  -- 11783292 not much difference, but some?
** TODO check new values with more repetitions

* <2016-03-16 ke 23:45> missing symbols!
  https://lwn.net/Articles/371207/
  DMA -> luultavasti kyse on laiteajurikoodista ! !
* DONE <2016-03-12 la 13:47> huomattu että pitkään kestävä mittaussessio johtaa tyhjään logidumppiin
  Johtunee siitä, logi truncoituu, eikä startPattern matchaa ollenkaan ..
  Ratkaisu? http://stackoverflow.com/questions/6321555/what-is-the-size-limit-for-logcat-and-how-to-change-its-capacity
* <2016-02-28 su 00:09> perffien tutkintaa muista!
  cp ~/NativeBenchmark/obj/local/armeabi/libnativebenchmark.so data/fi.helsinki.cs.tituomin.nativebenchmark/lib
* <2016-02-27 la 23:15> IMPORTANT removed memory leak f29cf9b
* <2016-02-27 la 20:39> added some certainty that j2j custom getfield side-effects actually working
* <2016-02-27 la 12:51> fixes and formatting
** Verified fix to npe in getFilter works
** Ran whole series through :quick profile

* <2016-01-21 to 19:06> last time compared to
** installed new system image with hopefully correct su
*** DONE verify su
